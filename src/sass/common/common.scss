@import 'materialize';

#nav-button {
	position: absolute;
	left: 10px;
	top: 10px;
	a {
		color: white;
	}
}
.visible-print {
  display: none !important;
}
@media print {
  .hidden-print {
    display: none !important;
  }
}
.video-container iframe {
	border: none;
}
p.tableblock {
	margin: 0px;
}
td.tableblock {
	padding: 5px;
}
.table-of-contents {
	a.active {
		border-left: 2px solid color("blue", "darken-1");
	}
	a:hover {
		border-left: 1px solid color("blue", "lighten-2");
	}
}
.toast a {
	margin-left: 5px;
	margin-right: 5px;
}
.external {
	i.material-icons {
		vertical-align: middle;
		margin-left: 5px;
	}
}
#main-content {
	ul {
		list-style-type: disc;
		list-style-position: outside;
		list-style-image: none;
		padding-left: 2em;
	}
	ol {
		padding-left: 2em;
	}
}
#main-content ul li {
	list-style-type: inherit !important;
}
.badge.footnote {
	border-radius:10px;
  font-size: 0.6em;
  background-color: color("blue", "base");
  color: white;
  vertical-align: middle;
  padding: 2px 6px;
  line-height: inherit;
}
.material-tooltip {
	color: color("blue", "darken-4");
	.backdrop {
		border-radius: 0 !important;
		background-color: color("blue-grey", "lighten-5");
		opacity: 0.9 !important;
	}
	max-width: 20%;
}

.table-of-contents li a.active {
	font-weight: bold;
}

.pin-top {
	position: relative;
}

// Class for when element is below threshold
.pin-bottom {
	position: relative;
}

// Class for when element is pinned
.pinned {
	margin-top: 30px;
	position: fixed !important;
}

.small .flow-text, .small.flow-text {
  font-weight: 300;
  $i: 0;
  @while $i <= $intervals {
    @media only screen and (min-width : 360 + ($i * $interval-size)) {
      font-size: 0.9rem * (1 + (.02 * $i));
    }
    $i: $i + 1;
  }

  // Handle below 360px screen
  @media only screen and (max-width: 360px) {
    font-size: 0.9rem;
  }
}

h1.flow-text , .h1.flow-text {
  font-weight: 400;
  $i: 0;
  @while $i <= $intervals {
    @media only screen and (min-width : 360 + ($i * $interval-size)) {
      font-size: $h1-fontsize * (1 + (.02 * $i));
    }
    $i: $i + 1;
  }

  // Handle below 360px screen
  @media only screen and (max-width: 360px) {
    font-size: $h1-fontsize;
  }
}
h2.flow-text , .h2.flow-text {
  font-weight: 400;
  $i: 0;
  @while $i <= $intervals {
    @media only screen and (min-width : 360 + ($i * $interval-size)) {
      font-size: $h2-fontsize * (1 + (.02 * $i));
    }
    $i: $i + 1;
  }

  // Handle below 360px screen
  @media only screen and (max-width: 360px) {
    font-size: $h2-fontsize;
  }
}
h3.flow-text , .h3.flow-text {
  font-weight: 400;
  $i: 0;
  @while $i <= $intervals {
    @media only screen and (min-width : 360 + ($i * $interval-size)) {
      font-size: $h3-fontsize * (1 + (.02 * $i));
    }
    $i: $i + 1;
  }

  // Handle below 360px screen
  @media only screen and (max-width: 360px) {
    font-size: $h3-fontsize;
  }
}
h4.flow-text , .h4.flow-text {
  font-weight: 400;
  $i: 0;
  @while $i <= $intervals {
    @media only screen and (min-width : 360 + ($i * $interval-size)) {
      font-size: $h4-fontsize * (1 + (.02 * $i));
    }
    $i: $i + 1;
  }

  // Handle below 360px screen
  @media only screen and (max-width: 360px) {
    font-size: $h4-fontsize;
  }
}
h5.flow-text , .h5.flow-text {
  font-weight: 400;
  $i: 0;
  @while $i <= $intervals {
    @media only screen and (min-width : 360 + ($i * $interval-size)) {
      font-size: $h5-fontsize * (1 + (.02 * $i));
    }
    $i: $i + 1;
  }

  // Handle below 360px screen
  @media only screen and (max-width: 360px) {
    font-size: $h5-fontsize;
  }
}
blockquote.flow-text{
  font-weight: 400;
  $i: 0;
  @while $i <= $intervals {
    @media only screen and (min-width : 360 + ($i * $interval-size)) {
      font-size: 1.0rem * (1 + (.02 * $i));
    }
    $i: $i + 1;
  }

  // Handle below 360px screen
  @media only screen and (max-width: 360px) {
    font-size: 1.0rem;
  }
}
.h1 {
	@extend h1;
}
.h2 {
	@extend h2;
}
.h3 {
	@extend h3;
}
.h4 {
	@extend h4;
}
.h5 {
	@extend h5;
}
.h6 {
	@extend h6;
}

/* vim: ts=2:sw=2:et
*/
